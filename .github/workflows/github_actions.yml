name: Build and Test Spring Repository

env:
  REGISTRY: "registry.digitalocean.com/student-recipes-container"
  IMAGE_NAME: "spring-boot-backend-rest-api"
  
on: push

jobs:
# Spring Boot Backend
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Actions
        uses: actions/checkout@v3
        
      - name: Moving directory
        run: mv -f recipe_backend/* .
        
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: gradle
        
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
          
      - name: Execute Gradle build
        run: ./gradlew build --scan
        
      - name: Check contents of build/libs directory
        run: ls build/libs
        
      - name: Build container image
      #         run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

        run: docker build --build-arg JAR_FILE=build/libs/*SNAPSHOT.jar -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old images
        # run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags latest) --force; else echo "No repository"; fi
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi
      - name: Push image to DigitalOcean Container Registry
      # run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest
      
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker stop $(echo $IMAGE_NAME)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest
            
        #$(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
      
        
        
        

# Nextjs Frontend
#  frontend:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - run: mv -f recipe_frontend/* .
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 16
#      - run: npm build && npm test

